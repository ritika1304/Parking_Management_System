{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nfunction StatusService(lotId) {\n  _s();\n  const [status, setStatus] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchStatus = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`/api/lots/${lotId}/status`);\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch status.\");\n        }\n        const data = await response.json();\n        setStatus(data.status);\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n        setError(error.message);\n      }\n    };\n    fetchStatus();\n  }, [lotId]);\n  return {\n    status,\n    loading,\n    error\n  };\n}\n_s(StatusService, \"htvhNcZgKS45HYIztuQyEnOhAUA=\");\n_c = StatusService;\nexport default StatusService;\nvar _c;\n$RefreshReg$(_c, \"StatusService\");","map":{"version":3,"names":["useState","useEffect","StatusService","lotId","_s","status","setStatus","loading","setLoading","error","setError","fetchStatus","response","fetch","ok","Error","data","json","message","_c","$RefreshReg$"],"sources":["C:/Users/New/Desktop/parkL/parkl/src/User/StatusServices.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nfunction StatusService(lotId) {\r\n  const [status, setStatus] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchStatus = async () => {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const response = await fetch(`/api/lots/${lotId}/status`);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to fetch status.\");\r\n        }\r\n\r\n        const data = await response.json();\r\n        setStatus(data.status);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchStatus();\r\n  }, [lotId]);\r\n\r\n  return { status, loading, error };\r\n}\r\n\r\nexport default StatusService;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,SAASC,aAAaA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC5B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9BH,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI;QACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,aAAYV,KAAM,SAAQ,CAAC;QAEzD,IAAI,CAACS,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;QAC5C;QAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;QAClCX,SAAS,CAACU,IAAI,CAACX,MAAM,CAAC;QACtBG,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdD,UAAU,CAAC,KAAK,CAAC;QACjBE,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC;MACzB;IACF,CAAC;IAEDP,WAAW,EAAE;EACf,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,OAAO;IAAEE,MAAM;IAAEE,OAAO;IAAEE;EAAM,CAAC;AACnC;AAACL,EAAA,CA9BQF,aAAa;AAAAiB,EAAA,GAAbjB,aAAa;AAgCtB,eAAeA,aAAa;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}