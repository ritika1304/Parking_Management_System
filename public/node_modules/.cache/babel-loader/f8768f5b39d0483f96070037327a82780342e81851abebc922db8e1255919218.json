{"ast":null,"code":"// import { useState } from \"react\";\n\n// function BookingService() {\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   const bookSpot = async (userId, lotId, spotNumber, duration) => {\n//     setLoading(true);\n//     setError(null);\n\n//     try {\n//       const response = await fetch(\"/api/bookings\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//           userId,\n//           lotId,\n//           spotNumber,\n//           duration,\n//         }),\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(\"Booking failed.\");\n//       }\n\n//       setLoading(false);\n//       return true;\n//     } catch (error) {\n//       setLoading(false);\n//       setError(error.message);\n//       return false;\n//     }\n//   };\n\n//   return { bookSpot, loading, error };\n// }\n\n// export default BookingService;","map":{"version":3,"names":[],"sources":["C:/Users/New/Desktop/parkL/src/User/BookServices.js"],"sourcesContent":["// import { useState } from \"react\";\r\n\r\n// function BookingService() {\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   const bookSpot = async (userId, lotId, spotNumber, duration) => {\r\n//     setLoading(true);\r\n//     setError(null);\r\n\r\n//     try {\r\n//       const response = await fetch(\"/api/bookings\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({\r\n//           userId,\r\n//           lotId,\r\n//           spotNumber,\r\n//           duration,\r\n//         }),\r\n//       });\r\n\r\n//       if (!response.ok) {\r\n//         throw new Error(\"Booking failed.\");\r\n//       }\r\n\r\n//       setLoading(false);\r\n//       return true;\r\n//     } catch (error) {\r\n//       setLoading(false);\r\n//       setError(error.message);\r\n//       return false;\r\n//     }\r\n//   };\r\n\r\n//   return { bookSpot, loading, error };\r\n// }\r\n\r\n// export default BookingService;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}